(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{OCRN:function(e,n,t){},hsp1:function(e,n,t){"use strict";t.r(n),t.d(n,"InsuranceModule",function(){return Ce});var a=t("ofXK"),i=t("3Pt+"),r=t("KZX/"),c=t("SHZf"),s=t("UFn0"),l=t("iCh7"),o=t("qQcL"),u=t("pLZG"),b=t("1G5W"),d=t("ua0i"),p=function(e){return e.FFS="FFS",e.CAPITATION="CAPITATION",e}({}),h=t("fXoL"),g=t("bNXi"),y=t("JA5x"),z=t("B+r4"),f=t("zAKX"),m=t("5vDB"),I=t("eHCX"),X=t("glKu"),C=t("KupA");function P(e,n){if(1&e&&h.Sb(0,"nz-option",22),2&e){const e=n.$implicit;h.rc("nzLabel",null==e?null:e.value)("nzValue",null==e?null:e.key)}}function v(e,n){if(1&e&&h.Sb(0,"nz-option",22),2&e){const e=n.$implicit;h.rc("nzLabel",null==e?null:e.value)("nzValue",null==e?null:e.key)}}function T(e,n){if(1&e&&h.Xc(0),2&e){const e=h.ic().$implicit;h.Zc(" and ",null==e.value.secondaryPayerTypes?null:e.value.secondaryPayerTypes.length," more selected ")}}function M(e,n){1&e&&(h.Vb(0),h.Sb(1,"br"),h.Xb(2,"div",2),h.Xb(3,"div",3),h.Xb(4,"strong",23),h.Xc(5," Primary insurance of the patient must be of the selected payer type "),h.Wb(),h.Wb(),h.Xb(6,"div",3),h.Xb(7,"strong",23),h.Xc(8," Secondary insurance of the patient should contain at least 1 of the following selected payer types "),h.Wb(),h.Wb(),h.Wb(),h.Ub())}function S(e,n){if(1&e){const e=h.Yb();h.Vb(0),h.Xb(1,"a",24),h.ec("click",function(){return h.Lc(e),h.ic(2).add()}),h.Sb(2,"app-icons",25),h.Wb(),h.Xc(3," \xa0 "),h.Ub()}}function W(e,n){if(1&e){const e=h.Yb();h.Vb(0),h.Xb(1,"a",26),h.ec("nzOnConfirm",function(){h.Lc(e);const n=h.ic().$implicit;return h.ic().delete(null==n?null:n.key)}),h.Sb(2,"app-icons",27),h.Wb(),h.Ub()}}function A(e,n){1&e&&(h.Vb(0),h.Sb(1,"br"),h.Xb(2,"div",2),h.Xb(3,"div",3),h.Xb(4,"strong",23),h.Xc(5," The rule will be applied to these programs only "),h.Wb(),h.Wb(),h.Xb(6,"div",3),h.Xb(7,"strong",23),h.Xc(8," The rule will be applied to patients who support the specified payment model only "),h.Wb(),h.Wb(),h.Xb(9,"div",28),h.Xb(10,"strong",23),h.Xc(11," The rules defined under this section will mark a patient's insurance as the selected tier "),h.Wb(),h.Wb(),h.Wb(),h.Ub())}function D(e,n){if(1&e&&(h.Vb(0),h.Xb(1,"nz-card"),h.Xb(2,"div",2),h.Xb(3,"div",3),h.Xb(4,"strong"),h.Xc(5,"Primary Insurance"),h.Wb(),h.Xb(6,"nz-select",4),h.ec("ngModelChange",function(e){return n.$implicit.value.primaryPayerType=e}),h.Vc(7,P,1,2,"nz-option",5),h.jc(8,"keyvalue"),h.Wb(),h.Wb(),h.Xb(9,"div",3),h.Xb(10,"strong"),h.Xc(11,"Secondary Insurance"),h.Wb(),h.Xb(12,"nz-select",6),h.ec("ngModelChange",function(e){return n.$implicit.value.secondaryPayerTypes=e}),h.Vc(13,v,1,2,"nz-option",5),h.jc(14,"keyvalue"),h.Wb(),h.Vc(15,T,1,1,"ng-template",null,7,h.Wc),h.Wb(),h.Wb(),h.Vc(17,M,9,0,"ng-container",8),h.Sb(18,"br"),h.Xb(19,"div",2),h.Xb(20,"div",3),h.Xb(21,"strong"),h.Xc(22,"Program(s)"),h.Wb(),h.Xb(23,"nz-select",9),h.ec("ngModelChange",function(e){return n.$implicit.value.programs=e}),h.Sb(24,"nz-option",10),h.Sb(25,"nz-option",11),h.Sb(26,"nz-option",12),h.Wb(),h.Wb(),h.Xb(27,"div",3),h.Xb(28,"strong"),h.Xc(29,"Payment Model"),h.Wb(),h.Xb(30,"nz-select",13),h.ec("ngModelChange",function(e){return n.$implicit.value.paymentModel=e}),h.Sb(31,"nz-option",14),h.Sb(32,"nz-option",15),h.Wb(),h.Wb(),h.Xb(33,"div",16),h.Xb(34,"strong"),h.Xc(35,"Tier"),h.Wb(),h.Xb(36,"nz-select",17),h.ec("ngModelChange",function(e){return n.$implicit.value.tier=e}),h.Sb(37,"nz-option",18),h.Sb(38,"nz-option",19),h.Sb(39,"nz-option",20),h.Sb(40,"nz-option",21),h.Wb(),h.Wb(),h.Xb(41,"div",16),h.Xb(42,"strong"),h.Xc(43,"\xa0"),h.Wb(),h.Vc(44,S,4,0,"ng-container",8),h.Vc(45,W,3,0,"ng-container",8),h.Wb(),h.Wb(),h.Vc(46,A,12,0,"ng-container",8),h.Wb(),h.Sb(47,"nz-divider"),h.Ub()),2&e){const e=n.$implicit,t=n.index,a=h.Ic(16),i=h.ic();h.Db(6),h.rc("ngModel",e.value.primaryPayerType),h.Db(1),h.rc("ngForOf",h.kc(8,22,i.payerTypeMap)),h.Db(5),h.rc("nzMaxTagCount",2)("nzMaxTagPlaceholder",a)("ngModel",e.value.secondaryPayerTypes),h.Db(1),h.rc("ngForOf",h.kc(14,24,i.payerTypeMap)),h.Db(4),h.rc("ngIf",0===t),h.Db(6),h.rc("ngModel",e.value.programs),h.Db(1),h.rc("nzValue","RPM"),h.Db(1),h.rc("nzValue","BHI"),h.Db(1),h.rc("nzValue","CCM"),h.Db(4),h.rc("ngModel",e.value.paymentModel),h.Db(1),h.rc("nzValue","FFS"),h.Db(1),h.rc("nzValue","CAPITATION"),h.Db(4),h.rc("ngModel",e.value.tier),h.Db(1),h.rc("nzValue",1),h.Db(1),h.rc("nzValue",2),h.Db(1),h.rc("nzValue",3),h.Db(1),h.rc("nzValue",4),h.Db(4),h.rc("ngIf",(null==i.rules?null:i.rules.size)-1===t),h.Db(1),h.rc("ngIf",0!=(null==i.rules?null:i.rules.size)-1),h.Db(1),h.rc("ngIf",0===t)}}let E=(()=>{class e extends o.a{constructor(e,n){super(),this._insuranceService=e,this._notificationsService=n,this.pageIndex=1,this.payerTypeMap=new Map([["UNKNOWN","Unknown"],["MEDICARE","Medicare"],["MEDICARE_ADVANTAGE","Medicare Advantage"],["COMMERCIAL","Commercial"],["OTHER","Other"],["MEDICAID","Medicaid"],["GOVERNMENT","Government"]]),this.baseTierRules=[{primaryPayerType:"MEDICARE_ADVANTAGE",secondaryPayerTypes:["MEDICAID"],programs:[d.a.CCM],paymentModel:p.FFS,tier:1},{primaryPayerType:"MEDICARE",secondaryPayerTypes:["MEDICAID","COMMERCIAL"],programs:[d.a.CCM],paymentModel:p.FFS,tier:1},{primaryPayerType:"MEDICARE",secondaryPayerTypes:[],programs:[d.a.CCM],paymentModel:p.FFS,tier:2},{primaryPayerType:"MEDICARE_ADVANTAGE",secondaryPayerTypes:["MEDICARE_ADVANTAGE"],programs:[d.a.CCM],paymentModel:p.FFS,tier:3}],this.rules=new Map([[String(Date.now()),this.baseTierRules[0]],[String(Date.now()+1),this.baseTierRules[1]],[String(Date.now()+2),this.baseTierRules[2]],[String(Date.now()+3),this.baseTierRules[3]]]),this._routeHelperService.isPrimaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this.saveAndApply()),this._routeHelperService.isSecondaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this.saveAndApply(!0))}ngOnInit(){this.getAllInsurancePlans(),this.getExistingInsuranceTierRules()}getAllInsurancePlans(e=1){this.loading=!0,this._insuranceService.fetchAllInsurancePlans(e-1,99999999,this.searchKey).subscribe(e=>{this.insurancePlans=e,this.loading=!1})}getExistingInsuranceTierRules(){this._insuranceService.fetchInsuranceTierRules().subscribe(e=>{e&&(this.rules=new Map(Object.entries(null==e?void 0:e.rulesMap)))})}add(){const e={primaryPayerType:"",secondaryPayerTypes:[],programs:[d.a.CCM],paymentModel:p.FFS,tier:1};this.rules.set(String(Date.now()),e)}delete(e){this.rules.delete(e)}saveAndApply(e=!1){var n;const t={};null===(n=this.rules)||void 0===n||n.forEach((e,n)=>{t[n]=e}),this._insuranceService.saveInsuranceTierRules({rulesMap:t}).subscribe(()=>{e?this._insuranceService.applyInsuranceTierRules().subscribe(()=>{this._notificationsService.success("Insurance Tier Rules","Rules saved and are being applied!")}):this._notificationsService.success("Insurance Tier Rules","Rules updated successfully!")})}}return e.\u0275fac=function(n){return new(n||e)(h.Rb(l.a),h.Rb(g.b))},e.\u0275cmp=h.Lb({type:e,selectors:[["app-tier-labeling"]],features:[h.Ab],decls:3,vars:3,consts:[[1,"container"],[4,"ngFor","ngForOf"],["nz-row","","nzGutter","16"],["nz-col","","nzSpan","8"],["nzPlaceHolder","Please select one payer type",3,"ngModel","ngModelChange"],[3,"nzLabel","nzValue",4,"ngFor","ngForOf"],["nzMode","multiple","nzPlaceHolder","Please select one or more payer types",3,"nzMaxTagCount","nzMaxTagPlaceholder","ngModel","ngModelChange"],["alsoContainPlaceHolder",""],[4,"ngIf"],["nzMode","tags","nzPlaceHolder","Please select supported programs",3,"ngModel","ngModelChange"],["nzLabel","RPM",3,"nzValue"],["nzLabel","BHI",3,"nzValue"],["nzLabel","CCM",3,"nzValue"],["nzPlaceHolder","Please select the payment model",3,"ngModel","ngModelChange"],["nzLabel","Fee for Service",3,"nzValue"],["nzLabel","Capitation",3,"nzValue"],["nz-col","","nzSpan","3"],["nzPlaceHolder","Please select a tier",3,"ngModel","ngModelChange"],["nzLabel","Tier 1",3,"nzValue"],["nzLabel","Tier 2",3,"nzValue"],["nzLabel","Tier 3",3,"nzValue"],["nzLabel","Tier 4",3,"nzValue"],[3,"nzLabel","nzValue"],["nz-typography","","nzType","secondary"],[3,"click"],["name","plusCircle"],["nz-popconfirm","","nzPopconfirmTitle","Are you sure ?","nzPopconfirmPlacement","bottom",3,"nzOnConfirm"],["name","delete"],["nz-col","","nzSpan","6"]],template:function(e,n){1&e&&(h.Xb(0,"div",0),h.Vc(1,D,48,26,"ng-container",1),h.jc(2,"keyvalue"),h.Wb()),2&e&&(h.Db(1),h.rc("ngForOf",h.kc(2,1,n.rules)))},directives:[a.p,y.a,z.c,z.a,f.d,i.u,i.x,a.q,f.a,m.a,I.a,X.a,C.a],pipes:[a.j],styles:["a[_ngcontent-%COMP%]{display:inline-block;margin-top:25px}app-icons[_ngcontent-%COMP%]{vertical-align:sub}[_nghost-%COMP%]     .ant-typography-secondary{font-size:12px}"]}),e})();var k=t("4ik+"),R=t("tyNb"),O=t("rMZv"),w=t("PTRe"),L=t("nJia");function _(e,n){if(1&e&&h.Sb(0,"nz-option",18),2&e){const e=n.$implicit;h.rc("nzLabel",e)("nzValue",e)}}function V(e,n){if(1&e){const e=h.Yb();h.Xb(0,"nz-card"),h.Xb(1,"strong"),h.Xc(2,"Payer name"),h.Wb(),h.Xb(3,"input",7),h.ec("ngModelChange",function(n){return h.Lc(e),h.ic().insurancePayer.name=n}),h.Wb(),h.Sb(4,"br"),h.Sb(5,"br"),h.Xb(6,"strong"),h.Xc(7,"Payer Type"),h.Wb(),h.Xb(8,"nz-select",8),h.ec("ngModelChange",function(n){return h.Lc(e),h.ic().insurancePayer.type=n}),h.Sb(9,"nz-option",9),h.Sb(10,"nz-option",10),h.Sb(11,"nz-option",11),h.Sb(12,"nz-option",12),h.Sb(13,"nz-option",13),h.Sb(14,"nz-option",14),h.Sb(15,"nz-option",15),h.Wb(),h.Sb(16,"br"),h.Sb(17,"br"),h.Xb(18,"strong"),h.Xc(19,"Supported CPT Codes"),h.Wb(),h.Xb(20,"nz-select",16),h.ec("ngModelChange",function(n){return h.Lc(e),h.ic().insurancePayer.serviceCodes=n}),h.Vc(21,_,1,2,"nz-option",17),h.Wb(),h.Sb(22,"br"),h.Sb(23,"br"),h.Xb(24,"strong"),h.Xc(25,"Payer EMR Id"),h.Wb(),h.Xb(26,"input",7),h.ec("ngModelChange",function(n){return h.Lc(e),h.ic().insurancePayer.payerEMRId=n}),h.Wb(),h.Wb()}if(2&e){const e=h.ic();h.Db(3),h.rc("ngModel",e.insurancePayer.name),h.Db(5),h.rc("ngModel",e.insurancePayer.type),h.Db(12),h.rc("ngModel",e.insurancePayer.serviceCodes),h.Db(1),h.rc("ngForOf",null==e.insurancePayer?null:e.insurancePayer.serviceCodes),h.Db(5),h.rc("ngModel",e.insurancePayer.payerEMRId)}}function N(e,n){if(1&e){const e=h.Yb();h.Xb(0,"tr"),h.Xb(1,"td",19),h.jc(2,"titlecase"),h.Xb(3,"strong"),h.Xc(4),h.jc(5,"titlecase"),h.Wb(),h.Wb(),h.Xb(6,"td",19),h.Xc(7),h.Wb(),h.Xb(8,"td"),h.Xb(9,"a",20),h.ec("nzOnConfirm",function(){h.Lc(e);const t=n.$implicit;return h.ic().delete(t.id)}),h.Sb(10,"app-icons",21),h.Wb(),h.Wb(),h.Wb()}if(2&e){const e=n.$implicit;h.Db(1),h.rc("nzTooltipTitle",h.kc(2,4,null==e?null:e.name)),h.Db(3),h.Yc(h.kc(5,6,null==e?null:e.name)),h.Db(2),h.rc("nzTooltipTitle",null==e?null:e.planId),h.Db(1),h.Zc(" ",null==e?null:e.planId," ")}}const x=function(){return["50%","30%","20%"]};let U=(()=>{class e extends o.a{constructor(e,n,t,a){super(),this._router=e,this._activatedRoute=n,this._insuranceService=t,this._notificationsService=a,this.pageIndex=1,this._routeHelperService.isPrimaryActionTriggered().pipe(Object(k.filter)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this.updateInsurancePayer())}ngOnInit(){this.getInsurancePayerById()}getInsurancePayerById(){this._insuranceService.fetchInsurancePayerById(this._activatedRoute.snapshot.params.id).subscribe(e=>{var n;this.insurancePayer=e,this._routeHelperService.setTitleForRoute(null===(n=this.insurancePayer)||void 0===n?void 0:n.name)})}getInsurancePlansByPayerId(e=1){const n=this._activatedRoute.snapshot.params.id;this.loading=!0,this._insuranceService.fetchInsurancePlansForPayer(n,e-1,10,this.searchKey).subscribe(e=>{this.insurancePlans=e,this.loading=!1})}onQueryParamsChange(e){const{pageIndex:n}=e;this.getInsurancePlansByPayerId(n)}updateInsurancePayer(){this._insuranceService.updateInsurancePayer(this.insurancePayer).subscribe(()=>{this._notificationsService.success("Insurance Payer","Payer updated successfully!"),this._router.navigate(["insurance-payers"])})}delete(e){this._insuranceService.deleteInsurancePlan(e).subscribe(()=>{this._notificationsService.success("Insurance Plans","Plan deleted successfully!"),this.getInsurancePlansByPayerId()})}}return e.\u0275fac=function(n){return new(n||e)(h.Rb(R.g),h.Rb(R.a),h.Rb(l.a),h.Rb(g.b))},e.\u0275cmp=h.Lb({type:e,selectors:[["app-payer"]],features:[h.Ab],decls:18,vars:10,consts:[[1,"container"],["nz-row",""],["nz-col","","nzSpan","14"],[4,"ngIf"],[3,"nzData","nzShowPagination","nzLoading","nzFrontPagination","nzTotal","nzPageIndex","nzWidthConfig","nzQueryParams"],["insurancePlansTable",""],[4,"ngFor","ngForOf"],["type","text","nz-input","",3,"ngModel","ngModelChange"],[3,"ngModel","ngModelChange"],["nzValue","UNKNOWN","nzLabel","Unknown"],["nzValue","MEDICARE","nzLabel","Medicare"],["nzValue","MEDICARE_ADVANTAGE","nzLabel","Medicare Advantage"],["nzValue","COMMERCIAL","nzLabel","Commercial"],["nzValue","OTHER","nzLabel","Other"],["nzValue","MEDICAID","nzLabel","Medicaid"],["nzValue","GOVERNMENT","nzLabel","Government"],["nzMode","tags","nzPlaceHolder","Supported CPT Codes",3,"ngModel","ngModelChange"],[3,"nzLabel","nzValue",4,"ngFor","ngForOf"],[3,"nzLabel","nzValue"],["nzEllipsis","","nz-tooltip","",3,"nzTooltipTitle"],["nz-popconfirm","","nzPopconfirmTitle","Are you sure ?","nzPopconfirmPlacement","bottom",3,"nzOnConfirm"],["name","delete"]],template:function(e,n){if(1&e&&(h.Xb(0,"div",0),h.Sb(1,"br"),h.Xb(2,"div",1),h.Xb(3,"div",2),h.Vc(4,V,27,5,"nz-card",3),h.Wb(),h.Wb(),h.Sb(5,"nz-divider"),h.Xb(6,"nz-table",4,5),h.ec("nzQueryParams",function(e){return n.onQueryParamsChange(e)}),h.Xb(8,"thead"),h.Xb(9,"tr"),h.Xb(10,"th"),h.Xc(11,"Plan Name"),h.Wb(),h.Xb(12,"th"),h.Xc(13,"Plan Id"),h.Wb(),h.Xb(14,"th"),h.Xc(15,"Action"),h.Wb(),h.Wb(),h.Wb(),h.Xb(16,"tbody"),h.Vc(17,N,11,8,"tr",6),h.Wb(),h.Wb(),h.Wb()),2&e){const e=h.Ic(7);h.Db(4),h.rc("ngIf",n.insurancePayer),h.Db(2),h.rc("nzData",null==n.insurancePlans?null:n.insurancePlans.content)("nzShowPagination",!0)("nzLoading",n.loading)("nzFrontPagination",!1)("nzTotal",null==n.insurancePlans?null:n.insurancePlans.totalElements)("nzPageIndex",n.pageIndex)("nzWidthConfig",h.xc(9,x)),h.Db(11),h.rc("ngForOf",e.data)}},directives:[z.c,z.a,a.q,m.a,O.f,O.n,O.o,O.e,O.l,O.i,a.p,y.a,w.b,i.d,i.u,i.x,f.d,f.a,O.c,L.d,C.a,X.a],pipes:[a.A],styles:[""]}),e})();const j={Listing:{header:!0,title:"Insurance Payers",searchEnabled:!0,primaryAction:{title:"Bulk Upload",enabled:!0},secondaryAction:{title:"Tier Labeling",enabled:!0},multiAction:{},showTenantToggle:!0,subTenantToggleMode:"SINGLE"},BulkUpload:{header:!0,title:"Bulk Upload | Insurance Payers",searchEnabled:!1,primaryAction:{title:"Upload",permissions:[],enabled:!0},secondaryAction:{title:"Download Template",permissions:[],enabled:!0},multiAction:{},showTenantToggle:!0,subTenantToggleMode:"SINGLE"},Form:{header:!0,title:"Insurance Plan Form",searchEnabled:!1,primaryAction:{title:"Update",enabled:!0},secondaryAction:{},multiAction:{},showTenantToggle:!1},TierLabeling:{header:!0,title:"Insurance Tier Labeling",searchEnabled:!1,primaryAction:{title:"Save",enabled:!0},secondaryAction:{title:"Save & Apply",enabled:!0},multiAction:{},showTenantToggle:!0,subTenantToggleMode:"SINGLE"}};var $=t("T5gh"),F=t("bA1+"),G=(t("OCRN"),t("igu/")),H=t("OzZK"),B=t("RwU8"),K=t("C2AL"),Z=t("Nqz0"),Y=t("Q8cG"),Q=t("Szod"),q=t("t2pg");function J(e,n){1&e&&(h.Xb(0,"th"),h.Xc(1," Sub Tenant "),h.Wb())}function ee(e,n){if(1&e&&(h.Xb(0,"td"),h.Xc(1),h.jc(2,"tenantName"),h.Wb()),2&e){const e=h.ic().$implicit;h.Db(1),h.Zc(" ",h.kc(2,1,null==e?null:e.tenantId)," ")}}function ne(e,n){if(1&e){const e=h.Yb();h.Vb(0),h.Xc(1," \xa0\xa0 "),h.Xb(2,"a",31),h.ec("nzOnConfirm",function(){h.Lc(e);const n=h.ic().$implicit;return h.ic().delete(n.id)}),h.Sb(3,"app-icons",32),h.Wb(),h.Ub()}}function te(e,n){if(1&e){const e=h.Yb();h.Xb(0,"tr"),h.Xb(1,"td",25),h.ec("nzCheckedChange",function(t){h.Lc(e);const a=n.$implicit;return h.ic().onItemChecked(null==a?null:a.id,t)}),h.Wb(),h.Xb(2,"td",26),h.jc(3,"titlecase"),h.Xb(4,"strong"),h.Xc(5),h.jc(6,"titlecase"),h.Wb(),h.Wb(),h.Xb(7,"td",26),h.Xc(8),h.Wb(),h.Xb(9,"td",27),h.Xc(10),h.Wb(),h.Xb(11,"td",26),h.Xc(12),h.Wb(),h.Vc(13,ee,3,3,"td",23),h.Xb(14,"td"),h.Xb(15,"a",28),h.Sb(16,"app-icons",29),h.Wb(),h.Vc(17,ne,4,0,"ng-container",30),h.Wb(),h.Wb()}if(2&e){const e=n.$implicit,t=h.ic();h.Db(1),h.rc("nzChecked",t.setOfCheckedId.has(null==e?null:e.id)),h.Db(1),h.rc("nzTooltipTitle",h.kc(3,10,null==e?null:e.name)),h.Db(3),h.Yc(h.kc(6,12,null==e?null:e.name)),h.Db(2),h.rc("nzTooltipTitle",null==t.payerTypeMap?null:t.payerTypeMap.get(null==e?null:e.type)),h.Db(1),h.Zc(" ",null==t.payerTypeMap?null:t.payerTypeMap.get(null==e?null:e.type)," "),h.Db(2),h.Yc((null==e?null:e.serviceCodes)||"N/A"),h.Db(1),h.rc("nzTooltipTitle",null==e?null:e.payerEMRId),h.Db(1),h.Zc(" ",null==e?null:e.payerEMRId," "),h.Db(3),h.sc("routerLink",null==e?null:e.id),h.Db(2),h.rc("ngIf",!1)}}const ae=function(){return["3%","27%","15%","20%","15%","15%"]};let ie=(()=>{class e extends o.a{constructor(e,n,t,a){super(),this._router=e,this._insuranceService=n,this._dataSharingService=t,this._notificationsService=a,this.pageIndex=1,this.checked=!1,this.indeterminate=!1,this.setOfCheckedId=new Set,this.widthConfig=["3%","27%","15%","20%","15%","15%"],this.payerTypeMap=new Map([["UNKNOWN","Unknown"],["MEDICARE","Medicare"],["MEDICARE_ADVANTAGE","Medicare Advantage"],["COMMERCIAL","Commercial"],["OTHER","Other"],["MEDICAID","Medicaid"],["GOVERNMENT","Government"]]),this.selectedPayerType="ALL",this.isAccessAcrossSubTenants&&(this.widthConfig=["3%","20%","15%","15%","15%","12%","15%"]),this._routeHelperService.getSearch().pipe(Object(u.a)(e=>e!=this.searchKey),Object(b.a)(this.unsubscribed)).subscribe(e=>{this.searchKey=e,this.getAllInsurances()}),this._routeHelperService.isPrimaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this._router.navigate(["insurance-payers/bulk-upload"])),this._routeHelperService.isSecondaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this._router.navigate(["insurance-payers/tier-labeling"])),this._dataSharingService.onSubTenantChange().subscribe(e=>{this.onSubTenantChange(e)})}onSubTenantChange(e){"object"!=typeof e||""==e||null==e||null==e||(this.requestTenantIds=e),this.getAllInsurances()}getAllInsurances(e=1){this.loading=!0,this._insuranceService.fetchAllInsurancePayers(e-1,10,this.searchKey,this.selectedPayerType).subscribe(e=>{this.insurancePayers=e,this.loading=!1})}onQueryParamsChange(e){const{pageIndex:n}=e;this.getAllInsurances(n)}delete(e){this._insuranceService.deleteInsurancePayer(e).subscribe(()=>{this._notificationsService.success("Insurance Payer","Payer deleted successfully!"),this.getAllInsurances()})}updateCheckedSet(e,n){n?this.setOfCheckedId.add(e):this.setOfCheckedId.delete(e)}refreshCheckedStatus(){var e,n,t,a;this.checked=null===(n=null===(e=this.insurancePayers)||void 0===e?void 0:e.content)||void 0===n?void 0:n.every(({id:e})=>this.setOfCheckedId.has(e)),this.indeterminate=(null===(a=null===(t=this.insurancePayers)||void 0===t?void 0:t.content)||void 0===a?void 0:a.some(({id:e})=>this.setOfCheckedId.has(e)))&&!this.checked}onItemChecked(e,n){this.updateCheckedSet(e,n),this.refreshCheckedStatus()}onAllChecked(e){var n,t;null===(t=null===(n=this.insurancePayers)||void 0===n?void 0:n.content)||void 0===t||t.forEach(({id:n})=>this.updateCheckedSet(n,e)),this.refreshCheckedStatus()}bulkAddPayerType(e){var n;(null===(n=this.setOfCheckedId)||void 0===n?void 0:n.size)?this._insuranceService.updateInsurancePayerTypeInBulk({ids:Array.from(this.setOfCheckedId.values()),payerType:e}).subscribe(()=>{this._notificationsService.success("Insurance Payers","Payer type assigned successfully!"),this.clearState()}):this._notificationsService.error("Insurance Payers","No ids selected for assigning the payer type!")}clearState(){this.searchKey=void 0,this.checked=!1,this.indeterminate=!1,this.setOfCheckedId=new Set,this.selectedPayerType="ALL",this.getAllInsurances()}}return e.\u0275fac=function(n){return new(n||e)(h.Rb(R.g),h.Rb(l.a),h.Rb(G.a),h.Rb(g.b))},e.\u0275cmp=h.Lb({type:e,selectors:[["app-payers-list"]],features:[h.Ab],decls:58,vars:13,consts:[[1,"container"],["nz-row",""],["nz-col","","nzOffset","16","nzSpan","4"],["id","convert","nz-button","","nzType","primary","nz-dropdown","",3,"nzDropdownMenu"],["name","down","size","11px","color","var(--neutral-color)"],["menu","nzDropdownMenu"],["nz-menu",""],["nz-menu-item",""],[3,"click"],["nz-col","","nzSpan","4"],["id","payerType"],[3,"ngModel","ngModelChange"],["nzValue","ALL","nzLabel","All"],["nzValue","UNKNOWN","nzLabel","Unknown"],["nzValue","MEDICARE","nzLabel","Medicare"],["nzValue","MEDICARE_ADVANTAGE","nzLabel","Medicare Advantage"],["nzValue","COMMERCIAL","nzLabel","Commercial"],["nzValue","OTHER","nzLabel","Other"],["nzValue","MEDICAID","nzLabel","Medicaid"],["nzValue","GOVERNMENT","nzLabel","Government"],[3,"nzData","nzShowPagination","nzLoading","nzFrontPagination","nzTotal","nzPageIndex","nzWidthConfig","nzQueryParams"],["insurancePayersTable",""],["id","selection-th",3,"nzChecked","nzIndeterminate","nzCheckedChange"],[4,"isAccessAcrossTenantEnabled"],[4,"ngFor","ngForOf"],[3,"nzChecked","nzCheckedChange"],["nzEllipsis","","nz-tooltip","",3,"nzTooltipTitle"],["nzEllipsis",""],[3,"routerLink"],["name","edit"],[4,"ngIf"],["nz-popconfirm","","nzPopconfirmTitle","Are you sure ?","nzPopconfirmPlacement","bottom",3,"nzOnConfirm"],["name","delete"]],template:function(e,n){if(1&e&&(h.Xb(0,"div",0),h.Xb(1,"div",1),h.Xb(2,"div",2),h.Xb(3,"button",3),h.Xc(4," Convert to \xa0 "),h.Sb(5,"app-icons",4),h.Wb(),h.Xb(6,"nz-dropdown-menu",null,5),h.Xb(8,"ul",6),h.Xb(9,"li",7),h.Xb(10,"a",8),h.ec("click",function(){return n.bulkAddPayerType("MEDICARE")}),h.Xc(11,"Medicare"),h.Wb(),h.Wb(),h.Xb(12,"li",7),h.Xb(13,"a",8),h.ec("click",function(){return n.bulkAddPayerType("MEDICARE_ADVANTAGE")}),h.Xc(14,"Medicare Advantage"),h.Wb(),h.Wb(),h.Xb(15,"li",7),h.Xb(16,"a",8),h.ec("click",function(){return n.bulkAddPayerType("COMMERCIAL")}),h.Xc(17,"Commercial"),h.Wb(),h.Wb(),h.Xb(18,"li",7),h.Xb(19,"a",8),h.ec("click",function(){return n.bulkAddPayerType("OTHER")}),h.Xc(20,"Other"),h.Wb(),h.Wb(),h.Xb(21,"li",7),h.Xb(22,"a",8),h.ec("click",function(){return n.bulkAddPayerType("MEDICAID")}),h.Xc(23,"Medicaid"),h.Wb(),h.Wb(),h.Xb(24,"li",7),h.Xb(25,"a",8),h.ec("click",function(){return n.bulkAddPayerType("GOVERNMENT")}),h.Xc(26,"Government"),h.Wb(),h.Wb(),h.Wb(),h.Wb(),h.Wb(),h.Xb(27,"div",9),h.Xb(28,"strong",10),h.Xc(29,"Payer Type"),h.Wb(),h.Xb(30,"nz-select",11),h.ec("ngModelChange",function(e){return n.selectedPayerType=e})("ngModelChange",function(){return n.getAllInsurances()}),h.Sb(31,"nz-option",12),h.Sb(32,"nz-option",13),h.Sb(33,"nz-option",14),h.Sb(34,"nz-option",15),h.Sb(35,"nz-option",16),h.Sb(36,"nz-option",17),h.Sb(37,"nz-option",18),h.Sb(38,"nz-option",19),h.Wb(),h.Wb(),h.Wb(),h.Sb(39,"br"),h.Xb(40,"nz-table",20,21),h.ec("nzQueryParams",function(e){return n.onQueryParamsChange(e)}),h.Xb(42,"thead"),h.Xb(43,"tr"),h.Xb(44,"th",22),h.ec("nzCheckedChange",function(e){return n.onAllChecked(e)}),h.Wb(),h.Xb(45,"th"),h.Xc(46,"Payer Name"),h.Wb(),h.Xb(47,"th"),h.Xc(48,"Payer Type"),h.Wb(),h.Xb(49,"th"),h.Xc(50,"CPT Codes"),h.Wb(),h.Xb(51,"th"),h.Xc(52,"EMR Id"),h.Wb(),h.Vc(53,J,2,0,"th",23),h.Xb(54,"th"),h.Xc(55,"Action"),h.Wb(),h.Wb(),h.Wb(),h.Xb(56,"tbody"),h.Vc(57,te,18,14,"tr",24),h.Wb(),h.Wb(),h.Wb()),2&e){const e=h.Ic(7),t=h.Ic(41);h.Db(3),h.rc("nzDropdownMenu",e),h.Db(27),h.rc("ngModel",n.selectedPayerType),h.Db(10),h.rc("nzData",null==n.insurancePayers?null:n.insurancePayers.content)("nzShowPagination",!0)("nzLoading",n.loading)("nzFrontPagination",!1)("nzTotal",null==n.insurancePayers?null:n.insurancePayers.totalElements)("nzPageIndex",n.pageIndex)("nzWidthConfig",h.xc(12,ae)),h.Db(4),h.rc("nzChecked",n.checked)("nzIndeterminate",n.indeterminate),h.Db(13),h.rc("ngForOf",t.data)}},directives:[z.c,z.a,H.a,B.a,K.a,Z.d,Z.b,X.a,Z.e,Y.c,Y.e,f.d,i.u,i.x,f.a,O.f,O.n,O.o,O.e,O.l,O.m,Q.a,O.i,a.p,O.j,O.c,L.d,R.j,a.q,C.a],pipes:[a.A,q.a],styles:["#convert[_ngcontent-%COMP%]{float:right;margin-top:30px;margin-right:16px}#payerType[_ngcontent-%COMP%]{float:right;margin-right:10px;margin-top:10px}strong[_ngcontent-%COMP%]{display:block;max-width:30ch}[_nghost-%COMP%]     .ant-checkbox-checked .ant-checkbox-inner:after{transform:rotate(50deg) scale(.7) translate(-50%,-50%)}[_nghost-%COMP%]     .ant-checkbox-inner:after{top:25%;left:15%}[_nghost-%COMP%]     .ant-checkbox-indeterminate .ant-checkbox-inner:after{background-color:unset}app-icons[_ngcontent-%COMP%]{vertical-align:text-top}"]}),e})();var re=t("Ifg2");let ce=(()=>{class e{constructor(){this.headersMap=new Map([["Payer Name","name"],["Payer Type","type"],["Supported CPT Codes","serviceCodes"],["Payer EMR Identifier","payerEMRId"],["Plan Id","planId"],["Plan Name","planName"]])}validateHeaders(e){return e.forEach((e,n)=>{Object.keys(e).forEach(n=>{Object.defineProperty(e,this.headersMap.get(n),Object.getOwnPropertyDescriptor(e,n)),delete e[n]}),e.rowId=n}),e}validateRows(e){return e.forEach((e,n)=>{Object.keys(e).forEach(n=>{"Null"!==e[n]&&"NULL"!==e[n]&&"null"!==e[n]||(e[n]="")})}),e}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275prov=h.Nb({token:e,factory:e.\u0275fac}),e})();var se=t("4RGM"),le=t("MZxW"),oe=t("D9mS"),ue=t("dRHE");function be(e,n){if(1&e){const e=h.Yb();h.Xb(0,"nz-card"),h.Xb(1,"div",2),h.Xb(2,"div",3),h.Xb(3,"sub-tenant-select",4),h.ec("onSubTenantSelected",function(n){return h.Lc(e),h.ic().onSubTenantChange(n)}),h.Wb(),h.Wb(),h.Wb(),h.Xb(4,"nz-upload",5),h.Xb(5,"button",6),h.Xc(6," BROWSE / DRAG "),h.Wb(),h.Xb(7,"p"),h.Sb(8,"br"),h.Xc(9),h.jc(10,"translate"),h.Wb(),h.Wb(),h.Sb(11,"br"),h.Wb()}if(2&e){const e=h.ic();h.Db(3),h.rc("showError",e.showToggleError),h.Db(1),h.rc("nzCustomRequest",e.handleUpload)("nzShowButton",!0)("nzShowUploadList",!1),h.Db(5),h.Zc(" ",h.kc(10,5,"COMMON.DRAG_AND_UPLOAD")," ")}}function de(e,n){if(1&e){const e=h.Yb();h.Vb(0),h.Xb(1,"td",13),h.jc(2,"titlecase"),h.Xb(3,"strong"),h.Xc(4),h.jc(5,"titlecase"),h.Wb(),h.Wb(),h.Xb(6,"td",13),h.jc(7,"titlecase"),h.Xc(8),h.jc(9,"titlecase"),h.Wb(),h.Xb(10,"td",13),h.Xc(11),h.Wb(),h.Xb(12,"td",13),h.Xc(13),h.Wb(),h.Xb(14,"td",13),h.Xc(15),h.Wb(),h.Xb(16,"td",13),h.Xc(17),h.Wb(),h.Xb(18,"td"),h.Xb(19,"a",14),h.ec("click",function(){h.Lc(e);const n=h.ic().$implicit;return h.ic(2).startEdit(n.rowId)}),h.Sb(20,"app-icons",15),h.Wb(),h.Xc(21," \xa0\xa0 "),h.Xb(22,"a",16),h.ec("nzOnConfirm",function(){h.Lc(e);const n=h.ic().$implicit;return h.ic(2).deleteRow(n.rowId)}),h.Sb(23,"app-icons",17),h.Wb(),h.Wb(),h.Ub()}if(2&e){const e=h.ic().$implicit,n=h.ic(2);h.Db(1),h.rc("nzTooltipTitle",h.kc(2,12,null==e?null:e.name)),h.Db(3),h.Yc(h.kc(5,14,null==e?null:e.name)),h.Db(2),h.rc("nzTooltipTitle",h.kc(7,16,null==e?null:e.planName)),h.Db(2),h.Zc(" ",h.kc(9,18,null==e?null:e.planName)," "),h.Db(2),h.rc("nzTooltipTitle",null==e?null:e.planId),h.Db(1),h.Zc(" ",null==e?null:e.planId," "),h.Db(1),h.rc("nzTooltipTitle",null==n.payerTypeMap?null:n.payerTypeMap.get(null==e?null:e.type)),h.Db(1),h.Zc(" ",null==n.payerTypeMap?null:n.payerTypeMap.get(null==e?null:e.type)," "),h.Db(1),h.rc("nzTooltipTitle",null==e?null:e.serviceCodes),h.Db(1),h.Zc(" ",null==e?null:e.serviceCodes," "),h.Db(1),h.rc("nzTooltipTitle",null==e?null:e.payerEMRId),h.Db(1),h.Zc(" ",null==e?null:e.payerEMRId," ")}}function pe(e,n){if(1&e){const e=h.Yb();h.Xb(0,"td"),h.Xb(1,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.name=n}),h.Wb(),h.Wb(),h.Xb(2,"td"),h.Xb(3,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.planName=n}),h.Wb(),h.Wb(),h.Xb(4,"td"),h.Xb(5,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.planId=n}),h.Wb(),h.Wb(),h.Xb(6,"td"),h.Xb(7,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.type=n}),h.Wb(),h.Wb(),h.Xb(8,"td"),h.Xb(9,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.serviceCodes=n}),h.Wb(),h.Wb(),h.Xb(10,"td"),h.Xb(11,"input",18),h.ec("ngModelChange",function(n){h.Lc(e);const t=h.ic().$implicit;return h.ic(2).editCache[t.rowId].element.payerEMRId=n}),h.Wb(),h.Wb(),h.Xb(12,"td"),h.Xb(13,"a",19),h.ec("click",function(){h.Lc(e);const n=h.ic().$implicit;return h.ic(2).saveEdit(n.rowId)}),h.Xc(14,"Save"),h.Wb(),h.Wb()}if(2&e){const e=h.ic().$implicit,n=h.ic(2);h.Db(1),h.rc("ngModel",n.editCache[e.rowId].element.name),h.Db(2),h.rc("ngModel",n.editCache[e.rowId].element.planName),h.Db(2),h.rc("ngModel",n.editCache[e.rowId].element.planId),h.Db(2),h.rc("ngModel",n.editCache[e.rowId].element.type),h.Db(2),h.rc("ngModel",n.editCache[e.rowId].element.serviceCodes),h.Db(2),h.rc("ngModel",n.editCache[e.rowId].element.payerEMRId)}}const he=function(e){return{danger:e}};function ge(e,n){if(1&e&&(h.Vb(0),h.Xb(1,"tr",10),h.Vc(2,de,24,20,"ng-container",11),h.Vc(3,pe,15,6,"ng-template",null,12,h.Wc),h.Wb(),h.Ub()),2&e){const e=n.$implicit,t=h.Ic(4),a=h.ic(2);h.Db(1),h.rc("ngClass",h.yc(3,he,a.errors.hasOwnProperty(null==e?null:e.rowId))),h.Db(1),h.rc("ngIf",!a.editCache[e.rowId].edit)("ngIfElse",t)}}const ye=function(){return[50,100,150,200]},ze=function(){return["20%","20%","10%","10%","10%","10%","10%"]};function fe(e,n){if(1&e&&(h.Vb(0),h.Xb(1,"nz-table",7,8),h.Xb(3,"thead"),h.Xb(4,"tr"),h.Xb(5,"th"),h.Xc(6,"Payer Name"),h.Wb(),h.Xb(7,"th"),h.Xc(8,"Plan Name"),h.Wb(),h.Xb(9,"th"),h.Xc(10,"Plan Id"),h.Wb(),h.Xb(11,"th"),h.Xc(12,"Payer Type"),h.Wb(),h.Xb(13,"th"),h.Xc(14,"CPT Codes"),h.Wb(),h.Xb(15,"th"),h.Xc(16,"EMR Id"),h.Wb(),h.Xb(17,"th"),h.Xc(18,"Action"),h.Wb(),h.Wb(),h.Wb(),h.Xb(19,"tbody"),h.Vc(20,ge,5,5,"ng-container",9),h.Wb(),h.Wb(),h.Ub()),2&e){const e=h.Ic(2),n=h.ic();h.Db(1),h.rc("nzData",n.data)("nzPageSize",10)("nzPageSizeOptions",h.xc(5,ye))("nzWidthConfig",h.xc(6,ze)),h.Db(19),h.rc("ngForOf",e.data)}}const me=[{path:"",component:ie,pathMatch:"full",data:j.Listing,canActivate:[$.a,F.a]},{path:"bulk-upload",component:(()=>{class e extends o.a{constructor(e,n,t,a,i){super(),this._xlsxParserService=e,this._insurancePayerXlsxValidator=n,this._insuranceService=t,this._router=a,this._notificationsService=i,this.expandSet=new Set,this.editCache={},this.handleUpload=e=>{const n=new FileReader;this.showToggleError||(n.onload=()=>{const e=this._xlsxParserService.parse(n);try{this.data=this._insurancePayerXlsxValidator.validateHeaders(e[Object.keys(e)[0]]),this.data=this._insurancePayerXlsxValidator.validateRows(e[Object.keys(e)[0]])}catch(t){return void this._notificationsService.error("Bulk Upload","Error while reading file headers!")}this.updateEditCache(),this.bulkUploadVisible=!1},n.readAsBinaryString(e.file))},this.bulkUploadVisible=!0,this.errors=new Map,this.payerTypeMap=new Map([["0","Unknown"],["1","Medicare"],["2","Medicare Advantage"],["3","Commercial"],["4","Other"],["5","Medicaid"],["6","Government"]]),this._routeHelperService.isPrimaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this.validateAndSave()),this._routeHelperService.isSecondaryActionTriggered().pipe(Object(u.a)(e=>!!e),Object(b.a)(this.unsubscribed)).subscribe(()=>this.downloadTemplate())}onSubTenantChange(e){"object"==typeof e&&""!=e&&null!=e&&null!=e?(localStorage.setItem(se.a.REQUEST_TENANT_IDS,e),this.subTenantId=e,this.showToggleError=!1):(this.subTenantId=null,this.showToggleError=!0)}onExpandChange(e,n){n?this.expandSet.add(e):this.expandSet.delete(e)}startEdit(e){this.editCache[e].edit=!0}saveEdit(e){const n=this.data.findIndex(n=>n.rowId===e);Object.assign(this.data[n],this.editCache[e].element),this.editCache[e].edit=!1}deleteRow(e){this.data=this.data.filter(n=>n.rowId!==e)}updateEditCache(){this.data.forEach(e=>{this.editCache[e.rowId]={edit:!1,element:Object.assign({},e)}})}validateAndSave(){this._insuranceService.bulkUploadInsurancePayers(this.data).subscribe(()=>{this._notificationsService.success("Bulk Upload","Insurance payers uploaded successfully!"),this._router.navigate(["insurance-payers"])})}downloadTemplate(){window.open("https://api.cooeyhealth.com/v1/assets/download/?filename=insurance-payer-bulk-upload-template.xlsx","_blank")}}return e.\u0275fac=function(n){return new(n||e)(h.Rb(re.a),h.Rb(ce),h.Rb(l.a),h.Rb(R.g),h.Rb(g.b))},e.\u0275cmp=h.Lb({type:e,selectors:[["app-payers-list-upload"]],features:[h.Cb([re.a,ce]),h.Ab],decls:3,vars:2,consts:[[1,"container"],[4,"ngIf"],["nz-row","","nzGutter","64"],["nz-col","","nzSpan","6","nzOffset","18"],["mode","SINGLE",3,"showError","onSubTenantSelected"],["nzType","drag","nzAccept",".xlsx",3,"nzCustomRequest","nzShowButton","nzShowUploadList"],["nz-button","","nzType","primary","nzSize","large"],["nzShowPagination","true",3,"nzData","nzPageSize","nzPageSizeOptions","nzWidthConfig"],["editRowTable",""],[4,"ngFor","ngForOf"],[3,"ngClass"],[4,"ngIf","ngIfElse"],["editTemplate",""],["nzEllipsis","","nz-tooltip","",3,"nzTooltipTitle"],[3,"click"],["strokeWidth","4px","name","edit"],["nz-popconfirm","","nzPopconfirmTitle","Are you sure?",3,"nzOnConfirm"],["name","delete"],["type","text","nz-input","",3,"ngModel","ngModelChange"],[1,"save",3,"click"]],template:function(e,n){1&e&&(h.Xb(0,"div",0),h.Vc(1,be,12,7,"nz-card",1),h.Vc(2,fe,21,7,"ng-container",1),h.Wb()),2&e&&(h.Db(1),h.rc("ngIf",n.bulkUploadVisible),h.Db(1),h.rc("ngIf",!n.bulkUploadVisible))},directives:[a.q,y.a,z.c,z.a,le.a,oe.a,H.a,B.a,K.a,O.f,O.n,O.o,O.e,O.l,O.i,a.p,a.o,O.c,L.d,X.a,C.a,w.b,i.d,i.u,i.x],pipes:[ue.a,a.A],styles:[""]}),e})(),pathMatch:"full",data:j.BulkUpload,canActivate:[$.a,F.a]},{path:"tier-labeling",component:E,pathMatch:"full",data:j.TierLabeling,canActivate:[$.a,F.a]},{path:":id",component:U,pathMatch:"full",data:j.Form,canActivate:[$.a,F.a]}];let Ie=(()=>{class e{}return e.\u0275mod=h.Pb({type:e}),e.\u0275inj=h.Ob({factory:function(n){return new(n||e)},imports:[[R.k.forChild(me)],R.k]}),e})();var Xe=t("WoUL");let Ce=(()=>{class e{constructor(e){this.translationService=e,e.setLanguage()}}return e.\u0275mod=h.Pb({type:e}),e.\u0275inj=h.Ob({factory:function(n){return new(n||e)(h.bc(Xe.a))},imports:[[r.a,s.a,a.c,Ie,i.o,i.B,c.a.forRoot()]]}),e})()},iCh7:function(e,n,t){"use strict";t.d(n,"a",function(){return c}),t("OCRN");var a=t("tk/3"),i=t("AytR"),r=t("fXoL");let c=(()=>{class e{constructor(e){this._http=e,this.rootURL=i.g.url}fetchAllInsurancePayers(e=0,n=10,t,i){const r=`${this.rootURL}/v3/insurance/payers`,c={pageNumber:e,limit:n,searchKey:t,type:i};let s=new a.h;return Object.keys(c).forEach(e=>c[e]&&(s=s.append(e,c[e]))),this._http.get(r,{params:s})}fetchAllInsurancePlans(e=0,n=10,t){const i=`${this.rootURL}/v3/insurance/plans`,r={pageNumber:e,limit:n,searchKey:t};let c=new a.h;return Object.keys(r).forEach(e=>r[e]&&(c=c.append(e,r[e]))),this._http.get(i,{params:c})}fetchInsurancePlansForPayer(e,n=0,t=10,i){const r=`${this.rootURL}/v3/insurance/payers/${e}/plans`,c={pageNumber:n,limit:t,searchKey:i};let s=new a.h;return Object.keys(c).forEach(e=>c[e]&&(s=s.append(e,c[e]))),this._http.get(r,{params:s})}bulkUploadInsurancePayers(e){return this._http.post(`${this.rootURL}/v3/insurance/payers/bulk-upload/json`,e)}fetchInsurancePayerById(e){return this._http.get(`${this.rootURL}/v3/insurance/payers/${e}`)}updateInsurancePayer(e){return this._http.put(`${this.rootURL}/v3/insurance/payers`,e)}updateInsurancePayerTypeInBulk(e){return this._http.put(`${this.rootURL}/v3/insurance/payers/bulk`,e)}deleteInsurancePayer(e){return this._http.delete(`${this.rootURL}/v3/insurance/payers/${e}`)}deleteInsurancePlan(e){return this._http.delete(`${this.rootURL}/v3/insurance/plans/${e}`)}fetchInsuranceTierRules(){return this._http.get(`${this.rootURL}/v3/insurance/tier-rules`)}saveInsuranceTierRules(e){return this._http.post(`${this.rootURL}/v3/insurance/tier-rules`,e)}applyInsuranceTierRules(){return this._http.put(`${this.rootURL}/v3/insurance/tier-rules/apply`,{})}applyInsuranceTierRulesToLead(e){return this._http.put(`${this.rootURL}/v3/insurance/tier-rules/apply/lead/${e}`,{})}applyInsuranceTierRulesToPatient(e){return this._http.put(`${this.rootURL}/v3/insurance/tier-rules/apply/patient/${e}`,{})}}return e.\u0275fac=function(n){return new(n||e)(r.bc(a.c))},e.\u0275prov=r.Nb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})()}}]);